/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;    // make basic mesh ?
snap            true;    // decide to snap back to surface ?
addLayers       false;    // decide to add viscous layers ?


geometry // Load in STL files here
{
    //euler.stl {type triSurfaceMesh; name rocket;}
    //airbrakes.stl {type triSurfaceMesh; name airbrakes;}
    euler_rot45.stl {type triSurfaceMesh; name rocket;}
//    airbrakes_rot45.stl {type triSurfaceMesh; name airbrakes;}
/*
    rocket {
        type    triSurfaceMesh;
        file    "Euler.stl";
        regions
        {
            euler
            {
                name    body;
            }
        }
    }

    nosecone {
        type    triSurfaceMesh;
        file    "Nosecone.stl";
        regions
        {
            nosecone
            {
                name    nosecone;
            }
        }
    }
*/
};

castellatedMeshControls
{
    maxLocalCells 2000000;  //max cells per CPU core
    maxGlobalCells 4000000; //max cells to use before mesh deletion step
    minRefinementCells 10;  //was 0 - zero means no bad cells are allowed during refinement stages
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 1;  // expansion factor between each high & low refinement zone

    // Explicit feature edge refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    features // taken from STL from each .eMesh file created by "SurfaceFeatureExtract" command
    (
        //{file "euler.eMesh"; level 3;} 
        //{file "airbrakes.eMesh"; level 3;} 
        {file "euler_rot45.eMesh"; level 3;} 
//        {file "airbrakes_rot45.eMesh"; level 3;} 
    );

    // Surface based refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~

    refinementSurfaces // Surface-wise min and max refinement level
    {
    	rocket {level (3 4);}
    	airbrakes {level (4 5);}
    }  


    resolveFeatureAngle 30;  // Resolve sharp angles // Default 30
    refinementRegions        // In descending levels of fine-ness
    {
        /*
        airbrakes
        {
            mode distance;
            levels ((0.01 3) (0.02 2) (0.04 1));
        }
        body
        {
            mode distance;
            levels ((0.04 3) (0.08 2) (0.16 1));
        }
        */
        rocket
        {
            mode distance;
            levels ((0.1 2) (0.25 1) (0.5 0));
        }
        airbrakes
        {
            mode distance;
            levels ((0.1 3) (0.25 2) (0.5 1));
        }
    }
    //to decide which side of mesh to keep (cells that can "see" this point are kept)
    locationInMesh (0.5 0.5 -4.5);
    allowFreeStandingZoneFaces true;
}


// Settings for the snapping.
snapControls
{
    nSmoothPatch 3;
    tolerance 4.0;
    nSolveIter 30;
    nRelaxIter 5;
    nFeatureSnapIter 15; // default is 10
    
    // New settings from openfoam 2.2 onwards for SHMesh
    
    // default is false - detects without doing surfaceFeatureExtract
    implicitFeatureSnap false; 

    explicitFeatureSnap true; // default is true

    // default is false - detects features between multiple surfaces
    multiRegionFeatureSnap false;

}



// Settings for the layer addition.
addLayersControls
{
    relativeSizes true; // was true
    layers
    {
    	// Patch names used here are a combination of the patch name given to the STL file
    	//  and the names given to the solids in the STL: STLpatchName_insideSTLName
    	rocket           {nSurfaceLayers 3;} // was 3
    }

    expansionRatio 1.3;
    finalLayerThickness 0.5; //was 0.00016
    minThickness 0.01; //was 0.00008
    nGrow 0; // was 1 


    // Advanced settings

    featureAngle 80; // was 70 //- When not to extrude surface. 0 is flat, 90 is right angle.
    nRelaxIter 3;  //- Max# of snapping relaxation iter. Should stop before upon reaching a correct mesh.
    nSmoothSurfaceNormals 1;  // Number of smoothing iterations of surface normals
    nSmoothNormals 3; // Number of smoothing iterations of interior mesh movement direction
    nSmoothThickness 10;  // Smooth layer thickness over surface patches
    maxFaceThicknessRatio 0.5; // Stop layer growth on highly warped cells
    maxThicknessToMedialRatio 0.3; // Reduce layer growth where ratio thickness to medial distance is large
    minMedianAxisAngle 130;  // Angle used to pick up medial axis points
    nBufferCellsNoExtrude 0;   // Create buffer region for new layer terminations
    nLayerIter 50; // Overall max number of layer addition iterations
}



// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minFlatness 0.5;
    minVol 1e-13;
    minTetQuality 1e-9;
    minArea -1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.02;
    minVolRatio 0.01;
    minTriangleTwist -1;

    // Advanced

    nSmoothScale 4;
    errorReduction 0.75;
}

// Advanced

debug 0;


// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1E-6;


// ************************************************************************* //
